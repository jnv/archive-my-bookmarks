profile = "get-bookmarks@1.0"
provider = "reading-am"

"""
GetBookmarks map
"""
map GetBookmarks {
  userId = parameters.userId
  limit = 20
  offset = input.page ? parseInt(input.page) : 0
  yn = "all"

  path = `users/${userId}/posts?limit=${limit}&offset=${offset}&yn=${yn}`
  http GET "/api/{path}" {
    security "token"

    request "application/json" {
      query {
        limit = limit,
        offset = offset,
        yn = yn,
      }
    }

    response 200 {
      nextPage = `${offset + limit}`
      set if (!Array.isArray(body) || body.length === 0) {
        nextPage = null
      }
      return map result {
        self = path,
        nextPage = nextPage,
        data = body,
      }
    }

    response 401 {
      return map error {
        title = "Invalid user token"
      }
    }
  }
}

map GetComments {
  userId = parameters.userId
  limit = 20
  offset = input.page ? parseInt(input.page) : 0
  yn = "all"

  path = `users/${userId}/comments?limit=${limit}&offset=${offset}`
  http GET "/api/{path}" {
    security "token"

    request "application/json" {
      query {
        limit = limit,
        offset = offset,
        yn = yn,
      }
    }

    response 200 {
      nextPage = `${offset + limit}`
      set if (!Array.isArray(body) || body.length === 0) {
        nextPage = null
      }
      return map result {
        self = path,
        nextPage = nextPage,
        data = body,
      }
    }

    response 401 {
      return map error {
        title = "Invalid user token"
      }
    }
  }
}
